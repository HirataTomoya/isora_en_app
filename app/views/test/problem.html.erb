<header class='header__test'>
    <%# <p class='header__test-text'>isora wonderland</p> %>
    <img src="/menutitle.png" class='header__menu1-text'>
</header>

<main>
    <div class="problem-container">
        <div class="problem-container__border">
            <p class='problem-container__border-text'><%= "#{@problem_number}問目"%></p>
            <div class="problem-container__border__box">
                <p class='problem-container__border__box-text'><%= @word.word_en%></p>
                <input id="question" type="hidden" value="<%= @word.word_en%>"/>
                <div class="problem-container__border__box__count">
                    <p id="counter" class='counter-before'>3</p>
                </div>
                <%# <audio autoplay>
                    <source src="/Countdown.mp3">
                </audio> %>
                <%# <audio id="sound-file" preload="auto">
                    <source src="/correct.mp3" type="audio/mp3">
                </audio> %>
            </div>
            <div class="problem-container__border__btn">
                <input type="image" src="/OK.png" onclick="correctbuttonclick()" id='btn1' class='problem_btn_hide'>
                <input type="image" src="/notOK.png" onclick="incorrectbuttonclick()" id='btn2' class='problem_btn_hide'>
            </div>
        </div>
    </div>

    <script type="text/javascript">
        // タグ内にjavascriptコードを直接記述します。
        // const timerID = setTimeout(function(){
        // var href_link = gon.href_link_incorrect;
        // window.location.href = href_link;
        // }, 6*1000);

        count = 2; //カウントの初期値
        const counterID = setInterval('countdown()',1000); //1秒毎にcountup()を呼び出し

        function countdown() {
            document.getElementById("counter").innerText = count; //カウント表示
            count--; //カウントダウン
            if (count < 0) countstop(); //カウント終了
        }

        function countstop(){
            clearInterval(counterID);
            var word_jp = gon.word_jp
            var element = document.getElementById('counter');
            var element_btn1 = document.getElementById('btn1');
            var element_btn2 = document.getElementById('btn2');
            var element_jp = document.getElementById('counter');
            element.innerText = word_jp;
            element_btn1.classList.remove('problem_btn_hide');
            element_btn2.classList.remove('problem_btn_hide');
            element_jp.classList.remove('counter-before');
            element_jp.classList.add('counter-after');
        }

        function  correctbuttonclick() {
            // countstop();
            // clearTimeout(timerID);
            // document.getElementById( 'sound-file' ).play() ;
            // setTimeout(function(){
            // var href_link = gon.href_link_correct;
            // window.location.href = href_link;
            // }, 1.1*1000);
            var href_link_correct = gon.href_link_correct;
            window.location.href = href_link_correct;
        }

        function incorrectbuttonclick() {
            // countstop();
            // clearTimeout(timerID);
            var href_link_incorrect = gon.href_link_incorrect;
            window.location.href = href_link_incorrect;
        }

    </script>
    <script type='text/javascript'>
        // 発言を作成
        var speak_word = gon.speak_word
        var word_en = document.querySelector('#question').value;
        const uttr = new SpeechSynthesisUtterance();
        uttr.text = word_en;
        uttr.lang = 'en-US';
        // 発言を再生 (発言キューに発言を追加)
        window.speechSynthesis.speak(uttr);
    </script>
</main>
